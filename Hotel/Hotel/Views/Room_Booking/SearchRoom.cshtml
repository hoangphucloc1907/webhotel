
@model Hotel.ViewModel.BookingViewModel
@{
    ViewBag.Title = "SearchRoom";
}

<h3>Tìm Kiếm Phòng</h3>
<div class="container">
    <form action="SearchRoom" method="get">
        <div class="row">
            <div class="col-md-4">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <label asp-for="BookingFrom" class="control-label"></label>
                    @Html.LabelFor(model => model.BookingFrom, htmlAttributes: new { @class = "control-lable" })
                    @Html.EditorFor(model => model.BookingFrom, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BookingFrom, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="BookingFrom" class="control-label"></label>
                    @Html.LabelFor(model => model.BookingTo, htmlAttributes: new { @class = "control-lable" })
                    @Html.EditorFor(model => model.BookingTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BookingTo, null, new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="BookingFrom" class="control-label"></label>
                    @Html.LabelFor(model => model.NoOfMember, htmlAttributes: new { @class = "control-lable" })
                    @Html.EditorFor(model => model.NoOfMember, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NoOfMember, null, new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <input class="btn btn-success" type="submit" value="Tìm Kiếm" />
    </form>
</div>

<form>
    @Html.HiddenFor(model => model.BookingFrom)
    @Html.HiddenFor(model => model.BookingTo)

    <div class="row">
        @if (Model != null)
        {
            foreach (var item in Model.listRoom)
            {
                <table class="table table-bordered">

                    <tr>
                        <td>
                            <img src="@Url.Content("~/Hinh/"+item.RoomImage)" height="200" width="150" class="img-thumbnail" />
                            <br /><span>Số phòng: @Html.DisplayFor(modelItem => item.RoomNumber)</span>
                            <br /><span>Số người: @Html.DisplayFor(modelItem => item.RoomCapacity)</span>
                            <br /><span>Giá phòng: @item.RoomPrice.ToString("#,##0.00") đ/ngày</span>
                            <br /><span>Loại phòng: @Html.DisplayFor(modelItem => item.RoomType)</span>
                        </td>

                        <td>
                            <div class="book_btn d-none d-lg-block">

                                <button type="button" class="btn btn-primary" data-toggle="modal"
                                        data-target="#divBooking" data-backdrop="static" data-keyboard="false" onclick="Click(@item.RoomId) ">
                                    Dat Phong
                                </button>
                            </div>

                        </td>
                    </tr>
                </table>
            }
        }
    </div>
</form>

<div id="divBooking" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Booking</h4>
            </div>
            <div class="modal-body">
                <form id="formBooking" method="post" action="/Room_Booking/Create">
                    @*@if (ViewBag.ErrorMessage != null)
                    {
                        <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
                    }*@
                    @using (Html.BeginForm("Create", "Room_Booking", FormMethod.Post, new { @id = "formBooking" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @id = "txtName" } })
                                    @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CustomerAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CustomerAddress, new { htmlAttributes = new { @class = "form-control", @id = "txtAddress" } })
                                    @Html.ValidationMessageFor(model => model.CustomerAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CustomerPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CustomerPhone, new { htmlAttributes = new { @class = "form-control", @id = "txtPhone" } })
                                    @Html.ValidationMessageFor(model => model.CustomerPhone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BookingFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10 bookingfrom">
                                    @Html.EditorFor(model => model.BookingFrom, new { htmlAttributes = new { @class = "form-control datepicker", @id = "txtBookingFrom" } })
                                    @*@Html.EditorFor(model => model.BookingFrom, new { htmlAttributes = new { Value = Model.BookingFrom.ToString("dd-MM-yyyy"), @class = "form-control datepicker", @id = "txtBookingFrom" } })*@
                                    @Html.ValidationMessageFor(model => model.BookingFrom, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BookingTo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.BookingTo, new { htmlAttributes = new { @class = "form-control datepicke", @id = "txtBookingTo" } })
                                    @*@Html.EditorFor(model => model.BookingTo, new { htmlAttributes = new { Value = Model.BookingTo.ToString("dd-MM-yyyy"), @class = "form-control datepicker", @id = "txtBookingTo" } })*@
                                    @Html.ValidationMessageFor(model => model.BookingTo, null, new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RoomId, "Room", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.RoomId, @Model.ListOfRoom, new { @class = "form-control", @id = "txtRoomNumber" })
                                    @Html.ValidationMessageFor(model => model.RoomId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.NoOfMember, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NoOfMember, new { htmlAttributes = new { @class = "form-control", @id = "txtNoOfMember" } })
                                    @Html.ValidationMessageFor(model => model.NoOfMember, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PaymentTypeId, "PaymentType", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.PaymentTypeId, @Model.ListOfPaymentType, new { @class = "form-control", @id = "txtPaymentType" })
                                    @Html.ValidationMessageFor(model => model.PaymentTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button id="btnSave" type="submit" class="btn btn-success">Đặt Ngay</button>&nbsp;
                                <button type="button" data-dismiss="modal" class="btn btn-danger">Đóng</button>
                            </div>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>
<div style="margin-top: 10px"></div>
